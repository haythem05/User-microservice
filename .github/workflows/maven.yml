name: User Microservice CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Unit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Compile and Package (dev profile)
        run: mvn clean package -DskipTests -Pdev

      - name: Run Unit and Functional Tests (test profile)
        run: mvn test -Ptest
      - name: jacoco
        run: mvn verify -Ptest

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install .NET SDK (for Assembly Analyzer)
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Build app to generate dependencies
        run: mvn clean package -DskipTests

      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.2/dependency-check-8.4.2-release.zip
          unzip dependency-check-8.4.2-release.zip -d dependency-check

      - name: Run OWASP Dependency-Check
        run: |
          ./dependency-check/dependency-check/bin/dependency-check.sh \
            --project "UserMicroservice" \
            --scan target \
            --format "JSON" \
            --out dependency-check-report \
            --failOnCVSS 7

      - name: Upload JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-json
          path: dependency-check-report/dependency-check-report.json

  sonartest:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
        run: |
          mvn verify -Ptest org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName=${{ secrets.SONAR_PROJECT_NAME }} \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  dockerpush:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image (dev profile)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/user_microservice:latest
