name: User Microservice CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
 
jobs:
  build:
    name: Build and Unit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Compile and Package (dev profile)
        run: mvn clean package -DskipTests -Pdev

      - name: Run Unit and Functional Tests (test profile)
        run: mvn test -Ptest
      - name: jacoco
        run: mvn verify -Ptest

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java 
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build and resolve dependencies
        run: |
          mvn clean compile -DskipTests
          mvn dependency:resolve
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'json'
          output: 'trivy-report.json'
          severity: 'CRITICAL'
          exit-code: '1' 
          
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        if: always()  
        with:
          name: trivy-dependency-report
          path: trivy-report.json
  sonartest:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
        run: |
          mvn verify -Ptest org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName=${{ secrets.SONAR_PROJECT_NAME }} \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  dockerpush:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: dependency-check

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image (dev profile)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/user_microservice:1.0

  trivy_scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: dockerpush

    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy Scan
        run: |
          trivy image \
            --exit-code 1 \
            --severity CRITICAL \
            --ignore-unfixed \
            --format table \
            ${{ secrets.DOCKER_HUB_USERNAME }}/login-microservice:1.0
      - name: Save Trivy JSON Report
        run: |
          trivy image \
            --format json \
            --ignore-unfixed \
            --output trivy-report.json \
            ${{ secrets.DOCKER_HUB_USERNAME }}/login-microservice:1.0

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

